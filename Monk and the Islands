#include <bits/stdc++.h>

#define MOD 1000000007
#define lli long long int
#define gap " "
#define rep for(int i=0; i<n; i++)
#define repg for(int i=1; i<=n; i++)
#define vecti vector<int> 
#define vecvecti vector<vector<int>>
using namespace std;

void bfs(int node, vecvecti &mat, vector<bool> &visit, vecti &levels);

int main()
{
    int t; cin>>t;

    while(t--)
    {
        int n, m;
        cin >> n >> m;
        int sor, des;

        vector<vector<int>> mat(n + 1);
        vector<bool> visit(n + 1);
        vecti levels(n + 1);

        for (int i = 1; i <= m; i++)
        {
            cin >> sor >> des;
            mat[sor].push_back(des);
            mat[des].push_back(sor);
        }

        levels[1]=0;
        bfs(1, mat, visit, levels);
        repg
        {
            cout<<levels[i]<<gap;
        }
        cout<<endl;
        cout<<"Ans : "<<levels[n];
    }

}

void bfs(int node, vecvecti &mat, vector<bool> &visit, vecti &levels)
{
    queue<int> q;

    q.push(node);
    visit[node]=true;

    int curSource;
    int curEle;
    while(q.empty()==false)
    {
        curSource=q.front();
        q.pop();
        
        cout<<"element: "<<curSource<<endl;

        for(int i=0; i<mat[curSource].size(); i++)
        {
            curEle=mat[curSource][i];

            if(visit[curEle]==false)
            {
                q.push(curEle);

                visit[curEle]=true;
                levels[curEle]=levels[curSource]+1;
            }
        }
    }
}
